(defun fast-mul (a b)
  (defun even? (n)
    (= (mod n 2) 0))
  (defun double (n)
    (* 2 n))
  (defun halve (n)
    (/ n 2))
  (cond ((= b 0) 0)
        ((= b 1) a)
        ((even? b)
         (fast-mul (double a) (halve b)))
        (t (+ a (fast-mul a (- b 1))))))

(fast-mul 3 100)
(fast-mul 3 0)
